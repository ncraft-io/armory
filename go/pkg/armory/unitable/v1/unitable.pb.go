// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: armory/unitable/v1/unitable.proto

package unitable

import (
	_ "github.com/mojo-lang/core/go/pkg/mojo"
	core "github.com/mojo-lang/core/go/pkg/mojo/core"
	unitable "github.com/ncraft-io/armory/go/pkg/armory/unitable"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    *unitable.Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateTableRequest) GetTable() *unitable.Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type UpdateTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    *unitable.Table `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTableRequest) Reset() {
	*x = UpdateTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableRequest) ProtoMessage() {}

func (x *UpdateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateTableRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateTableRequest) GetTable() *unitable.Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *UpdateTableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTableRequest) Reset() {
	*x = GetTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRequest) ProtoMessage() {}

func (x *GetTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRequest.ProtoReflect.Descriptor instead.
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{2}
}

func (x *GetTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetTableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListTablesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	PageSize  int32           `protobuf:"varint,2000,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	PageToken string          `protobuf:"bytes,2001,opt,name=page_token,json=pageToken,proto3" json:"pageToken,omitempty"`
	Skip      int32           `protobuf:"varint,2002,opt,name=skip,proto3" json:"skip,omitempty"`
	Filter    string          `protobuf:"bytes,2011,opt,name=filter,proto3" json:"filter,omitempty"`
	Order     *core.Ordering  `protobuf:"bytes,2012,opt,name=order,proto3" json:"order,omitempty"`
	FieldMask *core.FieldMask `protobuf:"bytes,2013,opt,name=field_mask,json=fieldMask,proto3" json:"fieldMask,omitempty"`
	Unique    bool            `protobuf:"varint,2014,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{3}
}

func (x *ListTablesRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListTablesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTablesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTablesRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListTablesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTablesRequest) GetOrder() *core.Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ListTablesRequest) GetFieldMask() *core.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ListTablesRequest) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type ListTablesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tables        []*unitable.Table `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	TotalCount    int32             `protobuf:"varint,2000,opt,name=total_count,json=totalCount,proto3" json:"totalCount,omitempty"`
	NextPageToken string            `protobuf:"bytes,2001,opt,name=next_page_token,json=nextPageToken,proto3" json:"nextPageToken,omitempty"`
}

func (x *ListTablesResponse) Reset() {
	*x = ListTablesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesResponse) ProtoMessage() {}

func (x *ListTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesResponse.ProtoReflect.Descriptor instead.
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{4}
}

func (x *ListTablesResponse) GetTables() []*unitable.Table {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ListTablesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTablesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type DeleteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Force    bool   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteTableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteTableRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type SyncTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SyncTableRequest) Reset() {
	*x = SyncTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncTableRequest) ProtoMessage() {}

func (x *SyncTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncTableRequest.ProtoReflect.Descriptor instead.
func (*SyncTableRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{6}
}

func (x *SyncTableRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SyncTableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string           `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string           `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Column   *unitable.Column `protobuf:"bytes,3,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *CreateColumnRequest) Reset() {
	*x = CreateColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateColumnRequest) ProtoMessage() {}

func (x *CreateColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateColumnRequest.ProtoReflect.Descriptor instead.
func (*CreateColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{7}
}

func (x *CreateColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *CreateColumnRequest) GetColumn() *unitable.Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type UpdateColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string           `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string           `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Column   *unitable.Column `protobuf:"bytes,3,opt,name=column,proto3" json:"column,omitempty"`
	Id       string           `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateColumnRequest) Reset() {
	*x = UpdateColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateColumnRequest) ProtoMessage() {}

func (x *UpdateColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateColumnRequest.ProtoReflect.Descriptor instead.
func (*UpdateColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *UpdateColumnRequest) GetColumn() *unitable.Column {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *UpdateColumnRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetColumnRequest) Reset() {
	*x = GetColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColumnRequest) ProtoMessage() {}

func (x *GetColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColumnRequest.ProtoReflect.Descriptor instead.
func (*GetColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{9}
}

func (x *GetColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetColumnRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteColumnRequest) Reset() {
	*x = DeleteColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteColumnRequest) ProtoMessage() {}

func (x *DeleteColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteColumnRequest.ProtoReflect.Descriptor instead.
func (*DeleteColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DeleteColumnRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListColumnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table     string          `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	PageSize  int32           `protobuf:"varint,2000,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	PageToken string          `protobuf:"bytes,2001,opt,name=page_token,json=pageToken,proto3" json:"pageToken,omitempty"`
	Skip      int32           `protobuf:"varint,2002,opt,name=skip,proto3" json:"skip,omitempty"`
	Filter    string          `protobuf:"bytes,2011,opt,name=filter,proto3" json:"filter,omitempty"`
	Order     *core.Ordering  `protobuf:"bytes,2012,opt,name=order,proto3" json:"order,omitempty"`
	FieldMask *core.FieldMask `protobuf:"bytes,2013,opt,name=field_mask,json=fieldMask,proto3" json:"fieldMask,omitempty"`
	Unique    bool            `protobuf:"varint,2014,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *ListColumnsRequest) Reset() {
	*x = ListColumnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListColumnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColumnsRequest) ProtoMessage() {}

func (x *ListColumnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColumnsRequest.ProtoReflect.Descriptor instead.
func (*ListColumnsRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{11}
}

func (x *ListColumnsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListColumnsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ListColumnsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListColumnsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListColumnsRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListColumnsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListColumnsRequest) GetOrder() *core.Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ListColumnsRequest) GetFieldMask() *core.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ListColumnsRequest) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type ListColumnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns       []*unitable.Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	TotalCount    int32              `protobuf:"varint,2000,opt,name=total_count,json=totalCount,proto3" json:"totalCount,omitempty"`
	NextPageToken string             `protobuf:"bytes,2001,opt,name=next_page_token,json=nextPageToken,proto3" json:"nextPageToken,omitempty"`
}

func (x *ListColumnsResponse) Reset() {
	*x = ListColumnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListColumnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColumnsResponse) ProtoMessage() {}

func (x *ListColumnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColumnsResponse.ProtoReflect.Descriptor instead.
func (*ListColumnsResponse) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{12}
}

func (x *ListColumnsResponse) GetColumns() []*unitable.Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ListColumnsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListColumnsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateColumnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string             `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string             `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Columns  []*unitable.Column `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *BatchCreateColumnsRequest) Reset() {
	*x = BatchCreateColumnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateColumnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateColumnsRequest) ProtoMessage() {}

func (x *BatchCreateColumnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateColumnsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateColumnsRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{13}
}

func (x *BatchCreateColumnsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchCreateColumnsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchCreateColumnsRequest) GetColumns() []*unitable.Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type BatchUpdateColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string             `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string             `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Columns  []*unitable.Column `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *BatchUpdateColumnRequest) Reset() {
	*x = BatchUpdateColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateColumnRequest) ProtoMessage() {}

func (x *BatchUpdateColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateColumnRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{14}
}

func (x *BatchUpdateColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchUpdateColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchUpdateColumnRequest) GetColumns() []*unitable.Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type BatchDeleteColumnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Ids      []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteColumnRequest) Reset() {
	*x = BatchDeleteColumnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteColumnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteColumnRequest) ProtoMessage() {}

func (x *BatchDeleteColumnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteColumnRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteColumnRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{15}
}

func (x *BatchDeleteColumnRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchDeleteColumnRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchDeleteColumnRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type CreateRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string       `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string       `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Row      *core.Object `protobuf:"bytes,3,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *CreateRowRequest) Reset() {
	*x = CreateRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRowRequest) ProtoMessage() {}

func (x *CreateRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRowRequest.ProtoReflect.Descriptor instead.
func (*CreateRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CreateRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *CreateRowRequest) GetRow() *core.Object {
	if x != nil {
		return x.Row
	}
	return nil
}

type UpdateRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string       `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string       `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string       `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Row      *core.Object `protobuf:"bytes,4,opt,name=row,proto3" json:"row,omitempty"`
}

func (x *UpdateRowRequest) Reset() {
	*x = UpdateRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRowRequest) ProtoMessage() {}

func (x *UpdateRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRowRequest.ProtoReflect.Descriptor instead.
func (*UpdateRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *UpdateRowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRowRequest) GetRow() *core.Object {
	if x != nil {
		return x.Row
	}
	return nil
}

type GetRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRowRequest) Reset() {
	*x = GetRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRowRequest) ProtoMessage() {}

func (x *GetRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRowRequest.ProtoReflect.Descriptor instead.
func (*GetRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{18}
}

func (x *GetRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *GetRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetRowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRowRequest) Reset() {
	*x = DeleteRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRowRequest) ProtoMessage() {}

func (x *DeleteRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRowRequest.ProtoReflect.Descriptor instead.
func (*DeleteRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DeleteRowRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table     string          `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Query     string          `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	PageSize  int32           `protobuf:"varint,2000,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	PageToken string          `protobuf:"bytes,2001,opt,name=page_token,json=pageToken,proto3" json:"pageToken,omitempty"`
	Skip      int32           `protobuf:"varint,2002,opt,name=skip,proto3" json:"skip,omitempty"`
	Filter    string          `protobuf:"bytes,2011,opt,name=filter,proto3" json:"filter,omitempty"`
	Order     *core.Ordering  `protobuf:"bytes,2012,opt,name=order,proto3" json:"order,omitempty"`
	FieldMask *core.FieldMask `protobuf:"bytes,2013,opt,name=field_mask,json=fieldMask,proto3" json:"fieldMask,omitempty"`
	Unique    bool            `protobuf:"varint,2014,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *ListRowRequest) Reset() {
	*x = ListRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowRequest) ProtoMessage() {}

func (x *ListRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowRequest.ProtoReflect.Descriptor instead.
func (*ListRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{20}
}

func (x *ListRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ListRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ListRowRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListRowRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRowRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListRowRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ListRowRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListRowRequest) GetOrder() *core.Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ListRowRequest) GetFieldMask() *core.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ListRowRequest) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type ListRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects       []*core.Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	TotalCount    int32          `protobuf:"varint,2000,opt,name=total_count,json=totalCount,proto3" json:"totalCount,omitempty"`
	NextPageToken string         `protobuf:"bytes,2001,opt,name=next_page_token,json=nextPageToken,proto3" json:"nextPageToken,omitempty"`
}

func (x *ListRowResponse) Reset() {
	*x = ListRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRowResponse) ProtoMessage() {}

func (x *ListRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRowResponse.ProtoReflect.Descriptor instead.
func (*ListRowResponse) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{21}
}

func (x *ListRowResponse) GetObjects() []*core.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ListRowResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListRowResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ExportRowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database  string          `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table     string          `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	PageSize  int32           `protobuf:"varint,2000,opt,name=page_size,json=pageSize,proto3" json:"pageSize,omitempty"`
	PageToken string          `protobuf:"bytes,2001,opt,name=page_token,json=pageToken,proto3" json:"pageToken,omitempty"`
	Skip      int32           `protobuf:"varint,2002,opt,name=skip,proto3" json:"skip,omitempty"`
	Filter    string          `protobuf:"bytes,2011,opt,name=filter,proto3" json:"filter,omitempty"`
	Order     *core.Ordering  `protobuf:"bytes,2012,opt,name=order,proto3" json:"order,omitempty"`
	FieldMask *core.FieldMask `protobuf:"bytes,2013,opt,name=field_mask,json=fieldMask,proto3" json:"fieldMask,omitempty"`
	Unique    bool            `protobuf:"varint,2014,opt,name=unique,proto3" json:"unique,omitempty"`
}

func (x *ExportRowRequest) Reset() {
	*x = ExportRowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRowRequest) ProtoMessage() {}

func (x *ExportRowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRowRequest.ProtoReflect.Descriptor instead.
func (*ExportRowRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{22}
}

func (x *ExportRowRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *ExportRowRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *ExportRowRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExportRowRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ExportRowRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *ExportRowRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ExportRowRequest) GetOrder() *core.Ordering {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ExportRowRequest) GetFieldMask() *core.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

func (x *ExportRowRequest) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

type ExportRowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects       []*core.Object `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	TotalCount    int32          `protobuf:"varint,2000,opt,name=total_count,json=totalCount,proto3" json:"totalCount,omitempty"`
	NextPageToken string         `protobuf:"bytes,2001,opt,name=next_page_token,json=nextPageToken,proto3" json:"nextPageToken,omitempty"`
}

func (x *ExportRowResponse) Reset() {
	*x = ExportRowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportRowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRowResponse) ProtoMessage() {}

func (x *ExportRowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRowResponse.ProtoReflect.Descriptor instead.
func (*ExportRowResponse) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{23}
}

func (x *ExportRowResponse) GetObjects() []*core.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ExportRowResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ExportRowResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchCreateRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string         `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Rows     []*core.Object `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *BatchCreateRowsRequest) Reset() {
	*x = BatchCreateRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRowsRequest) ProtoMessage() {}

func (x *BatchCreateRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRowsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateRowsRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{24}
}

func (x *BatchCreateRowsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchCreateRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchCreateRowsRequest) GetRows() []*core.Object {
	if x != nil {
		return x.Rows
	}
	return nil
}

type BatchUpdateRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string         `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string         `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Rows     []*core.Object `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *BatchUpdateRowsRequest) Reset() {
	*x = BatchUpdateRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateRowsRequest) ProtoMessage() {}

func (x *BatchUpdateRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateRowsRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateRowsRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{25}
}

func (x *BatchUpdateRowsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchUpdateRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchUpdateRowsRequest) GetRows() []*core.Object {
	if x != nil {
		return x.Rows
	}
	return nil
}

type BatchDeleteRowsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string   `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Table    string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Ids      []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchDeleteRowsRequest) Reset() {
	*x = BatchDeleteRowsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_armory_unitable_v1_unitable_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeleteRowsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteRowsRequest) ProtoMessage() {}

func (x *BatchDeleteRowsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_armory_unitable_v1_unitable_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteRowsRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteRowsRequest) Descriptor() ([]byte, []int) {
	return file_armory_unitable_v1_unitable_proto_rawDescGZIP(), []int{26}
}

func (x *BatchDeleteRowsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *BatchDeleteRowsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *BatchDeleteRowsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

var File_armory_unitable_v1_unitable_proto protoreflect.FileDescriptor

var file_armory_unitable_v1_unitable_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2f,
	0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2f, 0x75, 0x6e,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x75, 0x6c, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79,
	0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x6e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79,
	0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0xd2, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0xdb, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0xdc, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0xdd, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18,
	0xde, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x56, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x78, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x22, 0x88, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x57, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xad, 0x02, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x13, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0xd2, 0x0f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0xdb, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0xdc, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0xdd, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0xde, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x93, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x7f, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x5e, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x69, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x03,
	0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x72, 0x6f,
	0x77, 0x22, 0x79, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x22, 0x51, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x54, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xd0, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13,
	0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0xd2, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x12, 0x17, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0xdb, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0xdc, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0xdd, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x61, 0x73, 0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x17,
	0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0xde, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xab, 0x02, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x13, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70,
	0x18, 0xd2, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x17, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0xdb, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0xdc, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0xdd, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x18, 0xde, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xd0, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xd1, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x71, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0x71, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x5c, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x32, 0xb3, 0x0e, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x4e, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x26, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x47, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x26, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x09, 0x67, 0x65, 0x74,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e,
	0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x72,
	0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x5c, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x6d, 0x6f,
	0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x26, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x4a, 0x0a, 0x0a, 0x73, 0x79,
	0x6e, 0x63, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79,
	0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x72, 0x6d,
	0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x4b, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x5f, 0x0a, 0x0c,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x14, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2d, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75,
	0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x54, 0x0a, 0x13, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2c, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x54, 0x0a, 0x13, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x12,
	0x24, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e,
	0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d,
	0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x3f, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x12, 0x21, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x43,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x12, 0x24, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x12, 0x53, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x12,
	0x22, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e,
	0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72,
	0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x50, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x2e, 0x61, 0x72, 0x6d,
	0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x12, 0x50, 0x0a, 0x11, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x2a, 0x2e, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x77,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x42, 0x6f, 0x0a, 0x1c, 0x69, 0x6f, 0x2e,
	0x6e, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2e, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2e, 0x75, 0x6e,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x55, 0x6e, 0x69, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x63, 0x72, 0x61, 0x66, 0x74, 0x2d, 0x69, 0x6f,
	0x2f, 0x61, 0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x72, 0x6d, 0x6f, 0x72, 0x79, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x76,
	0x31, 0x3b, 0x75, 0x6e, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_armory_unitable_v1_unitable_proto_rawDescOnce sync.Once
	file_armory_unitable_v1_unitable_proto_rawDescData = file_armory_unitable_v1_unitable_proto_rawDesc
)

func file_armory_unitable_v1_unitable_proto_rawDescGZIP() []byte {
	file_armory_unitable_v1_unitable_proto_rawDescOnce.Do(func() {
		file_armory_unitable_v1_unitable_proto_rawDescData = protoimpl.X.CompressGZIP(file_armory_unitable_v1_unitable_proto_rawDescData)
	})
	return file_armory_unitable_v1_unitable_proto_rawDescData
}

var file_armory_unitable_v1_unitable_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_armory_unitable_v1_unitable_proto_goTypes = []interface{}{
	(*CreateTableRequest)(nil),        // 0: armory.unitable.v1.CreateTableRequest
	(*UpdateTableRequest)(nil),        // 1: armory.unitable.v1.UpdateTableRequest
	(*GetTableRequest)(nil),           // 2: armory.unitable.v1.GetTableRequest
	(*ListTablesRequest)(nil),         // 3: armory.unitable.v1.ListTablesRequest
	(*ListTablesResponse)(nil),        // 4: armory.unitable.v1.ListTablesResponse
	(*DeleteTableRequest)(nil),        // 5: armory.unitable.v1.DeleteTableRequest
	(*SyncTableRequest)(nil),          // 6: armory.unitable.v1.SyncTableRequest
	(*CreateColumnRequest)(nil),       // 7: armory.unitable.v1.CreateColumnRequest
	(*UpdateColumnRequest)(nil),       // 8: armory.unitable.v1.UpdateColumnRequest
	(*GetColumnRequest)(nil),          // 9: armory.unitable.v1.GetColumnRequest
	(*DeleteColumnRequest)(nil),       // 10: armory.unitable.v1.DeleteColumnRequest
	(*ListColumnsRequest)(nil),        // 11: armory.unitable.v1.ListColumnsRequest
	(*ListColumnsResponse)(nil),       // 12: armory.unitable.v1.ListColumnsResponse
	(*BatchCreateColumnsRequest)(nil), // 13: armory.unitable.v1.BatchCreateColumnsRequest
	(*BatchUpdateColumnRequest)(nil),  // 14: armory.unitable.v1.BatchUpdateColumnRequest
	(*BatchDeleteColumnRequest)(nil),  // 15: armory.unitable.v1.BatchDeleteColumnRequest
	(*CreateRowRequest)(nil),          // 16: armory.unitable.v1.CreateRowRequest
	(*UpdateRowRequest)(nil),          // 17: armory.unitable.v1.UpdateRowRequest
	(*GetRowRequest)(nil),             // 18: armory.unitable.v1.GetRowRequest
	(*DeleteRowRequest)(nil),          // 19: armory.unitable.v1.DeleteRowRequest
	(*ListRowRequest)(nil),            // 20: armory.unitable.v1.ListRowRequest
	(*ListRowResponse)(nil),           // 21: armory.unitable.v1.ListRowResponse
	(*ExportRowRequest)(nil),          // 22: armory.unitable.v1.ExportRowRequest
	(*ExportRowResponse)(nil),         // 23: armory.unitable.v1.ExportRowResponse
	(*BatchCreateRowsRequest)(nil),    // 24: armory.unitable.v1.BatchCreateRowsRequest
	(*BatchUpdateRowsRequest)(nil),    // 25: armory.unitable.v1.BatchUpdateRowsRequest
	(*BatchDeleteRowsRequest)(nil),    // 26: armory.unitable.v1.BatchDeleteRowsRequest
	(*unitable.Table)(nil),            // 27: armory.unitable.Table
	(*core.Ordering)(nil),             // 28: mojo.core.Ordering
	(*core.FieldMask)(nil),            // 29: mojo.core.FieldMask
	(*unitable.Column)(nil),           // 30: armory.unitable.Column
	(*core.Object)(nil),               // 31: mojo.core.Object
	(*core.Null)(nil),                 // 32: mojo.core.Null
}
var file_armory_unitable_v1_unitable_proto_depIdxs = []int32{
	27, // 0: armory.unitable.v1.CreateTableRequest.table:type_name -> armory.unitable.Table
	27, // 1: armory.unitable.v1.UpdateTableRequest.table:type_name -> armory.unitable.Table
	28, // 2: armory.unitable.v1.ListTablesRequest.order:type_name -> mojo.core.Ordering
	29, // 3: armory.unitable.v1.ListTablesRequest.field_mask:type_name -> mojo.core.FieldMask
	27, // 4: armory.unitable.v1.ListTablesResponse.tables:type_name -> armory.unitable.Table
	30, // 5: armory.unitable.v1.CreateColumnRequest.column:type_name -> armory.unitable.Column
	30, // 6: armory.unitable.v1.UpdateColumnRequest.column:type_name -> armory.unitable.Column
	28, // 7: armory.unitable.v1.ListColumnsRequest.order:type_name -> mojo.core.Ordering
	29, // 8: armory.unitable.v1.ListColumnsRequest.field_mask:type_name -> mojo.core.FieldMask
	30, // 9: armory.unitable.v1.ListColumnsResponse.columns:type_name -> armory.unitable.Column
	30, // 10: armory.unitable.v1.BatchCreateColumnsRequest.columns:type_name -> armory.unitable.Column
	30, // 11: armory.unitable.v1.BatchUpdateColumnRequest.columns:type_name -> armory.unitable.Column
	31, // 12: armory.unitable.v1.CreateRowRequest.row:type_name -> mojo.core.Object
	31, // 13: armory.unitable.v1.UpdateRowRequest.row:type_name -> mojo.core.Object
	28, // 14: armory.unitable.v1.ListRowRequest.order:type_name -> mojo.core.Ordering
	29, // 15: armory.unitable.v1.ListRowRequest.field_mask:type_name -> mojo.core.FieldMask
	31, // 16: armory.unitable.v1.ListRowResponse.objects:type_name -> mojo.core.Object
	28, // 17: armory.unitable.v1.ExportRowRequest.order:type_name -> mojo.core.Ordering
	29, // 18: armory.unitable.v1.ExportRowRequest.field_mask:type_name -> mojo.core.FieldMask
	31, // 19: armory.unitable.v1.ExportRowResponse.objects:type_name -> mojo.core.Object
	31, // 20: armory.unitable.v1.BatchCreateRowsRequest.rows:type_name -> mojo.core.Object
	31, // 21: armory.unitable.v1.BatchUpdateRowsRequest.rows:type_name -> mojo.core.Object
	0,  // 22: armory.unitable.v1.Unitable.create_table:input_type -> armory.unitable.v1.CreateTableRequest
	1,  // 23: armory.unitable.v1.Unitable.update_table:input_type -> armory.unitable.v1.UpdateTableRequest
	2,  // 24: armory.unitable.v1.Unitable.get_table:input_type -> armory.unitable.v1.GetTableRequest
	3,  // 25: armory.unitable.v1.Unitable.list_tables:input_type -> armory.unitable.v1.ListTablesRequest
	5,  // 26: armory.unitable.v1.Unitable.delete_table:input_type -> armory.unitable.v1.DeleteTableRequest
	6,  // 27: armory.unitable.v1.Unitable.sync_table:input_type -> armory.unitable.v1.SyncTableRequest
	7,  // 28: armory.unitable.v1.Unitable.create_column:input_type -> armory.unitable.v1.CreateColumnRequest
	8,  // 29: armory.unitable.v1.Unitable.update_column:input_type -> armory.unitable.v1.UpdateColumnRequest
	9,  // 30: armory.unitable.v1.Unitable.get_column:input_type -> armory.unitable.v1.GetColumnRequest
	10, // 31: armory.unitable.v1.Unitable.delete_column:input_type -> armory.unitable.v1.DeleteColumnRequest
	11, // 32: armory.unitable.v1.Unitable.list_columns:input_type -> armory.unitable.v1.ListColumnsRequest
	13, // 33: armory.unitable.v1.Unitable.batch_create_columns:input_type -> armory.unitable.v1.BatchCreateColumnsRequest
	14, // 34: armory.unitable.v1.Unitable.batch_update_column:input_type -> armory.unitable.v1.BatchUpdateColumnRequest
	15, // 35: armory.unitable.v1.Unitable.batch_delete_column:input_type -> armory.unitable.v1.BatchDeleteColumnRequest
	16, // 36: armory.unitable.v1.Unitable.create_row:input_type -> armory.unitable.v1.CreateRowRequest
	17, // 37: armory.unitable.v1.Unitable.update_row:input_type -> armory.unitable.v1.UpdateRowRequest
	18, // 38: armory.unitable.v1.Unitable.get_row:input_type -> armory.unitable.v1.GetRowRequest
	19, // 39: armory.unitable.v1.Unitable.delete_row:input_type -> armory.unitable.v1.DeleteRowRequest
	20, // 40: armory.unitable.v1.Unitable.list_row:input_type -> armory.unitable.v1.ListRowRequest
	22, // 41: armory.unitable.v1.Unitable.export_row:input_type -> armory.unitable.v1.ExportRowRequest
	24, // 42: armory.unitable.v1.Unitable.batch_create_rows:input_type -> armory.unitable.v1.BatchCreateRowsRequest
	25, // 43: armory.unitable.v1.Unitable.batch_update_rows:input_type -> armory.unitable.v1.BatchUpdateRowsRequest
	26, // 44: armory.unitable.v1.Unitable.batch_delete_rows:input_type -> armory.unitable.v1.BatchDeleteRowsRequest
	27, // 45: armory.unitable.v1.Unitable.create_table:output_type -> armory.unitable.Table
	32, // 46: armory.unitable.v1.Unitable.update_table:output_type -> mojo.core.Null
	27, // 47: armory.unitable.v1.Unitable.get_table:output_type -> armory.unitable.Table
	4,  // 48: armory.unitable.v1.Unitable.list_tables:output_type -> armory.unitable.v1.ListTablesResponse
	32, // 49: armory.unitable.v1.Unitable.delete_table:output_type -> mojo.core.Null
	27, // 50: armory.unitable.v1.Unitable.sync_table:output_type -> armory.unitable.Table
	30, // 51: armory.unitable.v1.Unitable.create_column:output_type -> armory.unitable.Column
	32, // 52: armory.unitable.v1.Unitable.update_column:output_type -> mojo.core.Null
	30, // 53: armory.unitable.v1.Unitable.get_column:output_type -> armory.unitable.Column
	32, // 54: armory.unitable.v1.Unitable.delete_column:output_type -> mojo.core.Null
	12, // 55: armory.unitable.v1.Unitable.list_columns:output_type -> armory.unitable.v1.ListColumnsResponse
	32, // 56: armory.unitable.v1.Unitable.batch_create_columns:output_type -> mojo.core.Null
	32, // 57: armory.unitable.v1.Unitable.batch_update_column:output_type -> mojo.core.Null
	32, // 58: armory.unitable.v1.Unitable.batch_delete_column:output_type -> mojo.core.Null
	31, // 59: armory.unitable.v1.Unitable.create_row:output_type -> mojo.core.Object
	32, // 60: armory.unitable.v1.Unitable.update_row:output_type -> mojo.core.Null
	31, // 61: armory.unitable.v1.Unitable.get_row:output_type -> mojo.core.Object
	32, // 62: armory.unitable.v1.Unitable.delete_row:output_type -> mojo.core.Null
	21, // 63: armory.unitable.v1.Unitable.list_row:output_type -> armory.unitable.v1.ListRowResponse
	23, // 64: armory.unitable.v1.Unitable.export_row:output_type -> armory.unitable.v1.ExportRowResponse
	32, // 65: armory.unitable.v1.Unitable.batch_create_rows:output_type -> mojo.core.Null
	32, // 66: armory.unitable.v1.Unitable.batch_update_rows:output_type -> mojo.core.Null
	32, // 67: armory.unitable.v1.Unitable.batch_delete_rows:output_type -> mojo.core.Null
	45, // [45:68] is the sub-list for method output_type
	22, // [22:45] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_armory_unitable_v1_unitable_proto_init() }
func file_armory_unitable_v1_unitable_proto_init() {
	if File_armory_unitable_v1_unitable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_armory_unitable_v1_unitable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTablesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListColumnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListColumnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateColumnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteColumnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportRowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_armory_unitable_v1_unitable_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeleteRowsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_armory_unitable_v1_unitable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_armory_unitable_v1_unitable_proto_goTypes,
		DependencyIndexes: file_armory_unitable_v1_unitable_proto_depIdxs,
		MessageInfos:      file_armory_unitable_v1_unitable_proto_msgTypes,
	}.Build()
	File_armory_unitable_v1_unitable_proto = out.File
	file_armory_unitable_v1_unitable_proto_rawDesc = nil
	file_armory_unitable_v1_unitable_proto_goTypes = nil
	file_armory_unitable_v1_unitable_proto_depIdxs = nil
}
