// Code generated by ncraft. DO NOT EDIT.
// Rerunning ncraft will overwrite this file.
// Version: 0.1.0
// Version Date:

package main

import (
	"flag"
	"github.com/ncraft-io/ncraft/go/pkg/ncraft/config"
	"github.com/ncraft-io/ncraft/go/pkg/ncraft/logs"

	nserver "github.com/ncraft-io/ncraft-gokit/pkg/server"

	// This Service
	"github.com/ncraft-io/armory/service-go/internal/authing-server"
)

//go:generate go run github.com/ncraft-io/go-evaluate/cmd/evaluate

//go:evaluate date "+%Y-%m-%d %H:%M:%S %Z"
const BuildTime = ""

//go:evaluate git rev-list -1 HEAD
const GitHash = ""

//go:evaluate git branch --show-current
const GitBranch = ""

func main() {
	flag.String("http_addr", ":20171", "default ip address for http server")
	flag.String("grpc_addr", ":20172", "default ip address for grpc server")
	flag.String("debug_addr", ":20173", "default ip address for debug server")

	// Update addresses if they have been overwritten by flags
	flag.Parse()
	if err := config.LoadFlag(); err != nil {
		logs.Warnw("failed to load flag", "error", err)
	}

	var conf nserver.Config
	err := config.ScanFrom(&conf, "authingServer", "server")
	if err != nil {
		logs.Warnw("failed to get the server config from config file", "error", err.Error())
	}

	// read the httpAddr value from flag, and will override the value from config file
	_ = config.ScanFrom(&conf.HttpAddr, "httpAddr")

	// read the grpcAddr value from flag, and will override the value from config file
	_ = config.ScanFrom(&conf.GrpcAddr, "grpcAddr")

	// read the debugAddr value from flag, and will override the value from config file
	_ = config.ScanFrom(&conf.DebugAddr, "debugAddr")

	if len(GitHash) == 0 {
		logs.Infow("starting AuthingServer. you can run `go generate` before `go build`, then there will be git info here.")
	} else {
		logs.Infow("starting AuthingServer", "gitHash", GitHash, "gitBranch", GitBranch, "buildTime", BuildTime)
	}
	server.Run(conf)
}
